import { useRef, useEffect, FC, useState } from 'react';
import { Footer } from '@/components';
import Head from 'next/head';
import { Divider } from 'antd';
import { BASE_URL } from '@/utils/constants/enviroment';
import axio from 'axios'
import { BrandType } from '@/types'
import { Drawer, Collapse, Slider } from 'antd'
import { AiOutlineDown } from 'react-icons/ai'
type Props = {
    scrolled: boolean,
    setScrolled: any,
    brand: BrandType
}

const Brand: FC<Props> = ({ scrolled, setScrolled, brand }) => {
    const ref = useRef<HTMLDivElement>(null)
    useEffect(() => {
        setScrolled(false)
        const handleElementScroll = () => {
            if (ref.current?.scrollTop !== undefined) {
                if (ref.current?.scrollTop > 5) {
                    setScrolled(true)
                }
                else {
                    setScrolled(false)
                }
            }
        }

        ref.current?.addEventListener('scroll', handleElementScroll)

        return () => {
            ref.current?.removeEventListener('scroll', handleElementScroll)
        }
    }, [])
    const [open, setOpen] = useState(false);

    const showDrawer = () => {
        setOpen(true);
    };

    const onClose = () => {
        setOpen(false);
    };
    const [value, setValue] = useState([1973, 2023]);
    const onAfterChange = (value: [number, number]) => {
        console.log('onAfterChange: ', value);
        setValue(value)
    };
    const filterBrand = brand.watches?.filter((item) => {
        const sectionMatch = item.year! >= value[0] && item.year! <= value[1];
        return sectionMatch;
    });
    return (
        <>
            <Head>
                <title>LUXICON</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/icon.svg" />
            </Head>
            <main className={`w-full h-[100vh] z-0 relative`}>
                <Drawer placement="right" onClose={onClose} open={open}>
                    <Collapse defaultActiveKey={['1']} ghost expandIconPosition="end" size='large' className='p-0'>
                        <Collapse.Panel header={<span className='capitalize'>Year</span>} key={1}>
                            <Slider
                                min={1973}
                                max={2023}
                                range
                                step={1}
                                defaultValue={[1973, 2023]}
                                onAfterChange={onAfterChange}
                                marks={{
                                    1973: <span>{`<1973`}</span>,
                                    2023: <span>{`2023+`}</span>
                                }}
                            />
                        </Collapse.Panel>
                        <Collapse.Panel header={<span className='capitalize'>Case Material</span>} key={2}>
                        </Collapse.Panel>
                        <Collapse.Panel header={<span className='capitalize'>Dial color</span>} key={3}>
                        </Collapse.Panel>
                        <Collapse.Panel header={<span className='capitalize'>strap</span>} key={4}>
                        </Collapse.Panel>
                        <Collapse.Panel header={<span className='capitalize'>box and paper</span>} key={5}>
                        </Collapse.Panel>
                        <Collapse.Panel header={<span className='capitalize'>movement</span>} key={6}>
                        </Collapse.Panel>
                        <Collapse.Panel header={<span className='capitalize'>limit edition</span>} key={7}>
                        </Collapse.Panel>
                    </Collapse>

                </Drawer>
                <div className='absolute w-full h-full top-0 left-0 z-40 overflow-scroll home-wrapper pt-[90px]' ref={ref}>
                    <div className='w-full bg-[#EBEBEB]'>
                        <div className='max-w-7xl mx-auto flex flex-row items-center justify-end'>
                            <div className='flex flex-row gap-1 py-1 items-center font-thin text-sm'>
                                <span className='cursor-pointer hover:text-gray-400 transition duration-150 ease-in-out'>About us</span>
                                <Divider type='vertical' className='text-gray-700 ' />
                                <span className='cursor-pointer hover:text-gray-400 transition duration-150 ease-in-out'>Help</span>
                            </div>
                        </div>
                    </div>
                    <div className='w-full px-20 mx-auto py-10'>
                        <div className='text-center text-2xl font-bold mt-10 mb-5'>{brand.brands}</div>
                        <div className='flex justify-center'>
                            <span className='text-center w-[700px] tracking-tight text-sm leading-5'>{brand.description}</span>
                        </div>
                        <div className='flex flex-row gap-1 justify-center text-xs my-7'>
                            <span className='underline hover:text-blue-700 cursor-pointer'>All Brands</span>
                            <span>/</span>
                            <span className='cursor-pointer'>{brand.brands}</span>
                        </div>
                        <div className='w-full flex flex-row justify-between my-10 items-center'>
                            <span>Result({brand.watches?.length || 0})</span>
                            <div className='flex flex-row gap-1 cursor-pointer bg-[#EBEBEB] py-2 px-4 rounded-full items-center text-[#111111] hover:text-gray-500 transition duration-150 ease-in-out font-semibold' onClick={showDrawer}>
                                <span>Sort by</span>
                                <span>/</span>
                                <span>Filter</span>
                                <AiOutlineDown />
                            </div>
                        </div>
                        <div className='w-full flex flex-row gap-10 gap-y-20 flex-wrap'>
                            {filterBrand?.map((item, index) => (
                                <div key={index} className='w-[300px] flex flex-col gap-2 drop-shadow-2xl cursor-pointer'>
                                    <img src={item.coverImage} alt="" className='w-full h-[200px] object-cover' />
                                    <div className='flex flex-col gap-1'>
                                        <span className='text-sm'>{item.brand?.brands}</span>
                                        <span className='text-sm tracking-tighter break-all font-bold'>{item.modelName}</span>
                                        <span className='text-xs'>{item.category?.categories}</span>
                                    </div>
                                    <Divider className='my-[1px] bg-gray-300' />
                                    <div className='flex flex-col gap-1'>
                                        <span className='text-xs'>{item.modelNumber}</span>
                                        <div className='flex flex-row justify-between text-xs'>
                                            <div className='capitalize flex flex-row gap-1 items-center'>
                                                <span className='font-bold capitalize'>Box&Paper:</span>
                                                <span>{item.boxAndPapers ? 'yes' : 'no'}</span>
                                            </div>
                                            <div className='capitalize flex flex-row gap-1 items-center'>
                                                <span className='font-bold capitalize'>Year:</span>
                                                <span>{item.year}</span>
                                            </div>
                                            <div className='capitalize flex flex-row gap-1 items-center'>
                                                <span className='font-bold capitalize'>gender: </span>
                                                <span className='capitalize'>{item.gender}'s</span>
                                            </div>
                                        </div>
                                        <div className='capitalize text-xs'>
                                            <span className='font-bold'>Case: </span>
                                            <span className='tracking-tighter leading-3 break-all text-justify'>{item.case}</span>
                                        </div>
                                        <div className='capitalize text-xs'>
                                            <span className='font-bold'>Movement: </span>
                                            <span className='tracking-tighter leading-3 break-all text-justify'>{item.movement}</span>
                                        </div>
                                    </div>
                                </div>
                            )
                            )}
                        </div>
                    </div>
                    <div className='w-full bg-[#363636]'>
                        <Footer />
                    </div>
                </div>
            </main>
        </>
    )
}
export const getServerSideProps = async (context: any) => {
    const { id } = context.query
    try {
        const { data } = await axio.get(`${BASE_URL}/api/brands?slug=${id}`)
        return {
            props: {
                brand: data.data[0]
            }
        }
    }
    catch (err) {
        console.log(err)
        return {
            props: {
                brand: []
            }
        }
    }
}

export default Brand